[{"title":"照片测试","path":"/2024/09/17/照片测试/","content":""},{"title":"STM32-GPIO功能及其原理(基于HAL库和STM32CubeMX)","path":"/2024/09/01/STM32-GPIO功能及其原理(基于HAL库和CubeMX)/","content":"摘要：本文介绍了STM32芯片GPIO的功能和原理，HAL库 GPIO函数，以及CubeMX工具的使用； 0. 写在前面以下内容皆是基于笔者的嵌入式小白理解，部分语句并不够严谨，更多是为了自己和小白能够理解，如有错误敬请指正。 部分软件的使用教程省略。 1. GPIO基本原理GPIO是STM32的基础功能，能够进行引脚高&#x2F;低电平是输入输出，通俗来说，就是可以通过编写程序来控制某个引脚是低电平还是高电平(此时引脚的电平控制权在芯片)；或者能够检测外部输入的信号的高电平还是低电平(此时引脚的电平控制权在外设)。 例如，如果GPIO是输出模式，那么引脚接LED灯的正极，LED灯的负极接GND(电路中的地线，也就是电路图中的电源负极，电压为0V)，如果给出指令，让GPIO输出高电平(即置位)，那么灯泡就会亮；反之让GPIO输出低电平(即复位)，那么灯泡就会熄灭。 1.1 GPIO输出模式GPIO共有两种输出模式：推挽输出和开漏输出。 1.1.1 推挽输出推挽（Push-Pull）输出原理如下图。输出值Q由内部总线传递，通过D触发器输出 非Q，然后连接两个MOS管。PMOS管连接高电平，NMOS连接低电平。Q&#x3D;0时，非Q&#x3D;1，NMOS导通，IO输出低电平；反之，Q&#x3D;1时，非Q&#x3D;0，PMOS导通，输出高电平。 就是能推（Push）能拉（Pull）的意思。 1.1.2 开漏输出开漏（Open-Drain）输出原理如下图。和推挽输出的区别在于PMOS管没了，当Q&#x3D;0时能够将电平拉低，但是Q&#x3D;1时不能拉高电平，只能输出高阻态。此时可以通过上拉电阻接到所需要的高电平(3.3V~5V)。 另外，开漏输出有“线与”的特点，多个开漏输出电路连在一起时，一个电路输出低电平，所有电路都会被拉低。 1.2 GPIO输入模式输入模式主要分为三种：上拉输入和下拉输入还有浮空输入。 原理如图所示，实际上就是通过一个上拉电阻和一个下拉电阻来控制没有输入时的电平状态。顾名思义，上拉输入就是接入上拉电阻，没有输入时为高电平，当输入低电平时，电路电平被拉低；下拉输入相反，接入下拉电阻，没有输入时为低电平，输入高电平时电路电平被拉高；浮空输入则是上拉&#x2F;下拉电阻都不接，电路电平完全取决于输入电平。 例如下面三个开关，如果将这三个开关用于GPIO输入的话，PA0可以设置为浮空或者下拉输入，当按键被按下时，输入高电平。PB2~PB4可以设置为浮空或者上拉输入，当按键被按下时，输入低电平。 整个GPIO模块的原理图如下。 2. 使用GPIO工程以STM32C8T6为例。 首先新建STM32CubeMX工程：File - New Project - 搜索F103C8T6 - 选择芯片。 主界面如图所示。 然后配置GPIO口。 工程配置，笔者用的是MDK-ARM，用Keil软件编写C语言代码。这里可以选择生成C语言头文件。 参考： 关于地线: 笔记：电子设备接地，接的到底是什么地？ 写在后面笔者并不是一个勤快的人。目前工作内容主要是嵌入式开发，会经常和部门的硬件同事打交道，但是笔者目前所有的知识只有本科计算机，由于没有微电子硬件相关的基础，所以对于工作过程中的一些电性问题基本处理不了，直到现在工作了五个多月，也就会用个万用表读读电压，然后看看板子的原理图，剩下的就只能求助同事了。 下午打算学一点东西。今年计划考一次研试一试的，但是英语看了一会儿，实在背不下去，数学和专业课也还没复习。我不知道要从哪里开始学起，感觉要学的东西太多了，不管是考研还是工作，我现在都还没有一个明确的学习计划，就这样拖到了下午四点半。在工作之后，个人时间几乎都是靠游戏过去的，像是逃避焦虑一样不去想学习的事情，一旦想起来就会重新陷入深深的焦虑中。 于是抱着这样的心情写了这篇博客，至少解决工作上的问题对我现在而言是有益的，目前我对于STM32的开发还处于只会套库，原理一窍不通的阶段，所以我会尝试记录遇到的所有问题并弄清楚原理，发表于博客上。如果能坚持下来的话，我相信即使是我这样的人，也能有所进步的。 数学公式搞起来麻烦，下次。 电子电路相关的知识，如MOS管、上拉&#x2F;下拉电阻之类的知识，以后应该会写一些系统一点的博客吧，作学习整理之用。 以上。","tags":["Keil","MDK-ARM","GPIO"],"categories":["技术学习","嵌入式开发","STM32"]},{"title":"欢迎","path":"/2024/08/30/欢迎/","content":"你好！在大学毕业一年后，我尝试搭建了自己的博客。 之前就觉得前端很复杂，计算机网络学的也很差，目前还不是很会操作博客，只能通过git bash来创建文章，然后编写markdown文档，然后再用hexo指令更新。 笔者很懒，也很摆烂，摆烂了四五年，不管是学习上还是生活上都还是一团糟，但是至少我现在是一个独立自主的人，并且搭起了这个博客，即使啥都不懂，也算迈出了一步吧。 如果之后拿这个博客去投简历，这些话应该会删除吧(笑。) 这里目前还是知识和思想的荒原，并不好看，也没什么干货，我会努力的。 kisekinoyama，奇跡の山，是岸部真明老师的一首曲子。 之后也请多指教了。 以上。 博客常用操作 进入本地日志文档 新建文档:1hexo new [article name] 发布:123hexo chexo ghexo d 本地预览1hexo s commit 信息在_config.yml中设置 图像相关更新博客图像 在日志根目录&#x2F;source文件夹中添加文件夹images和图像文件 添加以下配置 _config.stellar.yml 12logo: avatar: /images/daimao.gif yaml配置语法相关yaml的本地属性需要使用大括号&#123;&#125;括起来，如&#123;theme.version&#125;、&#123;author.name&#125;； yaml的属性中如果用了js和html语法，那该属性的markdown文本会失效，需要跟换成html语法。如本站的页脚(markdown语法)： 1本站由 [&#123;author.name&#125;](/) 使用 [&#123;theme.name&#125; &#123;theme.version&#125;](&#123;theme.tree&#125;) 主题创建。 更换为html语法： 1本站由 &lt;a href=&quot;/&quot;&gt;&#123;author.name&#125;&lt;/a&gt; 使用 &lt;a href=&quot;&#123;theme.tree&#125;&quot;&gt;&#123;theme.name&#125; &#123;theme.version&#125;&lt;/a&gt;主题创建。 tips markdown还是换一个软件吧，vscode没有补全和语法提示很蛋疼，都不知道代码块中怎么添加缩进。12&gt; logo: &lt;/t&gt; avatar: /images/daimao.gif …好吧，这根本不是代码块。 搞一个网站的ico。","categories":["随笔","日寄"]},{"title":"Hello World","path":"/2024/08/28/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"path":"/README.html","content":"这个readme来自操作hexo的博客根目录&#x2F;source文件夹，说明source文件夹中的文件&#x2F;文件夹会被直接push到远程库中。验证完成。"}]